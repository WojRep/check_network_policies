<!DOCTYPE html>
<html lang="pl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Network Policy Generator</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        input[type="text"], input[type="file"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .requirements {
            margin-top: 20px;
            padding: 15px;
            background-color: #f8f9fa;
            border-left: 4px solid #4CAF50;
        }
        .error {
            color: red;
            margin-top: 10px;
            padding: 10px;
            border: 1px solid red;
            border-radius: 4px;
            display: none;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Generator polityk sieciowych</h1>
        <form id="uploadForm" action="/upload/" method="post" enctype="multipart/form-data">
            <div class="form-group">
                <label for="client_name">Nazwa klienta:</label>
                <input type="text" id="client_name" name="client_name" required>
            </div>
            <div class="form-group">
                <label for="file">Plik CSV z politykami:</label>
                <input type="file" id="file" name="file" accept=".csv" required>
            </div>
            <button type="submit">Generuj program</button>
        </form>
        <div id="error" class="error"></div>

        <div class="requirements">
            <h3>Wymagana struktura pliku CSV:</h3>
            <ul>
                <li>src_ip: Adres IP źródła</li>
                <li>src_fqdn: Pełna nazwa domenowa źródła</li>
                <li>src_port: Port źródłowy (lub zakres portów)</li>
                <li>protocol: Protokół transmisji (TCP/UDP)</li>
                <li>dst_ip: Adres IP celu</li>
                <li>dst_fqdn: Pełna nazwa domenowa celu</li>
                <li>dst_port: Port docelowy</li>
                <li>description: Opis połączenia</li>
            </ul>
        </div>
    </div>

    <script>
        document.getElementById('uploadForm').onsubmit = async (e) => {
            e.preventDefault();
            const formData = new FormData(e.target);
            
            try {
                const response = await fetch('/upload/', {
                    method: 'POST',
                    body: formData
                });
                
                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.detail || 'Wystąpił błąd podczas przesyłania pliku');
                }
                
                // Jeśli odpowiedź jest OK, pobierz plik
                const blob = await response.blob();
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = response.headers.get('content-disposition')?.split('filename=')[1] || 'generated.exe';
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
                window.URL.revokeObjectURL(url);
            } catch (error) {
                const errorDiv = document.getElementById('error');
                errorDiv.textContent = error.message;
                errorDiv.style.display = 'block';
            }
        };
    </script>
</body>
</html>

